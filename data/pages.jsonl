{"url": "https://www.geeksforgeeks.org", "title": "GeeksforGeeks | Your All-in-One Learning Portal", "text": "GeeksforGeeks | Your All-in-One Learning Portal Data Structure Java Python HTML Interview Preparation Courses Tutorials Practice Jobs DSA Practice Problems C C++ Java Python JavaScript Data Science Machine Learning Courses Linux DevOps Hello, What Do You Want To Learn? 40% off on Courses Full Stack Live Classes Master DevOps Courses View All 3.5 Generative AI Training Program - Live Beginner to Advanced 20k+ interested Geeks Explore now Get 40% Off 4.9 Tech Interview 101 : DSA to System Design for Working Professionals - Live Beginner to Advanced 369k+ interested Geeks Explore now Get 40% Off 4.7 MERN Full Stack Development - Live Beginner to Advanced 398k+ interested Geeks Explore now Get 40% Off 4.7 DevOps Engineering : Planning to Production - Live Beginner to Advanced 133k+ interested Geeks Explore now Get 40% Off 4.7 C++ Programming - Self Paced Beginner to Advanced 299k+ interested Geeks Explore now Get 40% Off 4.6 Java Programming - Self Paced Beginner to Advanced 400k+ interested Geeks Explore now Get 40% Off Must Explore Jobs for you Hire with us Advertise with Us Placement Training Program Explore Data Structure and Algorithms View more Web Development View more AI ML & Data Science View more Machine Learning View more Python View more Java View more System Design View more DevOps View more Programming Languages View more CS Subjects View more Practice DSA View more Interview Preparation View more Databases View more Software & Tools View more Must Explore Jobs for you Hire with us Advertise with Us Placement Training Program DSA View All Analysis of Algorithms Array Linked List Searching Algorithms Stack Sorting Algorithms Hashing Graph Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Advertise with us Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved"}
{"url": "https://www.geeksforgeeks.org/copyright-information/", "title": "Copyright Information - GeeksforGeeks", "text": "Copyright Information - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Practice Problems C C++ Java Python JavaScript Data Science Machine Learning Courses Linux DevOps SQL Web Development System Design Aptitude Sign In ▲ Copyright Information This to Affirm that GeeksforGeeks is the Copyright Holder/ Owner of the Contents (such as Videos, Photos, Visuals, Questions or any other Literary work) which are Created or Published on its website under the Copy Right Act 1957 and that any Unauthorized Transmission, Publication or Usage of the said Contents without any prior knowledge or written permission shall be treated as the illegal use of the same, which is strictly prohibited under the eyes of Law. Where the same shall be treated as Infringement of our rights inferred by the Copy Right Act, therefore shall attract appropriate Legal Proceedings against the said Infringer without any prior information. However, Plagiarism & AI Abuse Policy Authors are not permitted to employ bots or other forms of artificial intelligence while creating content. If bots, artificial intelligence, or other sources are utilized for a phrase/idea, proper acknowledgment must be given to the exact source, otherwise it may be considered plagiarism or copyright infringement. Authors are only allowed to reference material from other sources, bots, and artificial intelligence up to 20% of the time, and if they are discovered to be copying content from such sources more than 20% of the time, they will be requested to modify the article. If the author fails to rectify the content, action (as deemed appropriate) will be taken against them, which might also result in rejection of the said article. If an author is found to be copying content from bots, artificial intelligence of any kind or any other source (online or offline), they shall face the following consequences: First time: If an author is found to be copying content from other sources or using bots/AI for generating content for the first time, the said article shall not be published and no remunerations shall be given for the same. The author shall be informed of the reason their article was rejected. Second time: If an author is found to be copying content from elsewhere or using bots/AI for generating content the second time, the article shall not be considered, no remuneration shall be given and a warning will be issued. Third time: If an author is caught copying content from elsewhere for the third time, the work will not be published and the author’s contract will be terminated. If an author is found to have copied an article retrospectively, following actions shall be taken: If one article is found to be plagiarized retrospectively or it is found that the author used bots/AI of any kind, the article shall be deleted and payment for the same shall be adjusted in future payments. If two articles are found to be plagiarized retrospectively or it is found that the author used bots/AI of any kind, the articles shall be deleted and payment for the same shall be adjusted in future payments. If three or more articles are discovered to be retrospectively plagiarized, or if the author used bots/AI of any type, the articles will be removed, and the author’s contract will be reviewed. Payment will be adjusted accordingly, either by the author or in the current payment cycle. Therefore we believe you will comply with the above-said points to attribute the content in the right spirit. Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/", "title": "GeeksforGeeks | Your All-in-One Learning Portal", "text": "GeeksforGeeks | Your All-in-One Learning Portal Data Structure Java Python HTML Interview Preparation Courses Tutorials Practice Jobs DSA Practice Problems C C++ Java Python JavaScript Data Science Machine Learning Courses Linux DevOps Hello, What Do You Want To Learn? 40% off on Courses Full Stack Live Classes Master DevOps Courses View All 3.5 Generative AI Training Program - Live Beginner to Advanced 20k+ interested Geeks Explore now Get 40% Off 4.9 Tech Interview 101 : DSA to System Design for Working Professionals - Live Beginner to Advanced 369k+ interested Geeks Explore now Get 40% Off 4.7 MERN Full Stack Development - Live Beginner to Advanced 398k+ interested Geeks Explore now Get 40% Off 4.7 DevOps Engineering : Planning to Production - Live Beginner to Advanced 133k+ interested Geeks Explore now Get 40% Off 4.7 C++ Programming - Self Paced Beginner to Advanced 299k+ interested Geeks Explore now Get 40% Off 4.6 Java Programming - Self Paced Beginner to Advanced 400k+ interested Geeks Explore now Get 40% Off Must Explore Jobs for you Hire with us Advertise with Us Placement Training Program Explore Data Structure and Algorithms View more Web Development View more AI ML & Data Science View more Machine Learning View more Python View more Java View more System Design View more DevOps View more Programming Languages View more CS Subjects View more Practice DSA View more Interview Preparation View more Databases View more Software & Tools View more Must Explore Jobs for you Hire with us Advertise with Us Placement Training Program DSA View All Analysis of Algorithms Array Linked List Searching Algorithms Stack Sorting Algorithms Hashing Graph Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Advertise with us Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved"}
{"url": "https://www.geeksforgeeks.org/system-design/system-design-tutorial/", "title": "System Design Tutorial - GeeksforGeeks", "text": "System Design Tutorial - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! System Design Tutorial HLD LLD Functional and Non Functional Life Cycle Design Patterns UML Diagrams System Design Interview Guide Scalability Databases DSA Software Engineering Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences What is System Design System Design Introduction - LLD & HLD System Design Life Cycle | SDLC (Design) What are the components of System Design? Goals and Objectives of System Design Why is it Important to Learn System Design? Important Key Concepts and Terminologies – Learn System Design Advantages of System Design System Design Fundamentals Analysis of Monolithic and Distributed Systems - Learn System Design Requirements Gathering in System Design Differences between System Analysis and System Design Horizontal and Vertical Scaling | System Design Capacity Estimation in Systems Design How to Answer a System Design Interview Problem/Question? Functional and Non Functional Requirements Web Server, Proxies and their role in Designing Systems Scalability in System Design What is Scalability and How to achieve it? Which Scalability approach is right for our Application? - System Design Primary Bottlenecks that Hurt the Scalability of an Application - System Design Databases in Designing Systems Complete Guide to Database Design - System Design SQL vs. NoSQL - Which Database to Choose in System Design? File and Database Storage Systems in System Design Block, Object, and File Storage in System Design Database Sharding - System Design Database Replication in System Design High Level Design(HLD) What is High Level Design? - Learn System Design Availability in System Design Consistency in System Design Reliability in System Design CAP Theorem in System Design What is API Gateway? What is Content Delivery Network(CDN) in System Design What is Load Balancer & How Load Balancing works? Caching - System Design Concept Communication Protocols in System Design Activity Diagrams - Unified Modeling Language (UML) Message Queues - System Design Low Level Design(LLD) What is Low Level Design or LLD? Authentication vs Authorization in LLD - System Design Performance Optimization Techniques for System Design Object-Oriented Analysis and Design(OOAD) Data Structures and Algorithms for System Design Containerization Architecture in System Design Modularity and Interfaces In System Design Unified Modeling Language (UML) Diagrams Data Partitioning Techniques in System Design How to Prepare for Low-Level Design Interviews? Essential Security Measures in System Design Design Patterns Design Patterns Tutorial Creational Design Patterns Structural Design Patterns Behavioral Design Patterns Design Patterns Cheat Sheet - When to Use Which Design Pattern? Interview Guide for System Design How to Crack System Design Interview Round? System Design Interview Questions and Answers 5 Common System Design Concepts for Interview Preparation 5 Tips to Crack Low-Level System Design Interviews System Design Interview Questions & Answers Most Commonly Asked System Design Interview Problems/Questions Design Dropbox - A System Design Interview Question Designing Twitter - A System Design Interview Question System Design Netflix | A Complete Architecture System Design of Uber App | Uber System Architecture Design BookMyShow - A System Design Interview Question Designing Facebook Messenger | System Design Interview Complete Roadmap to Learn System Design for Beginners Guide to System Design for Freshers How Disney+ Hotstar Managed (5 Cr)+ Live Viewers During India's T20 World Cup Win[2024] DSA to System Design Course System Design Tutorial Last Updated : 03 Oct, 2025 Comments Improve Suggest changes 320 Likes Like Report System Design is the process of designing the architecture, components, and interfaces for a system so that it meets the end-user requirements. This specifically designed System Design tutorial will help you to learn and master System Design concepts in the most efficient way, from the basics to the advanced level. Why Learn System Design? System design is important for anyone who wants to build a robust, scalable, and efficient software application. Whether you are building a small-scale application or a large one, understanding system design allows you to architect solutions that can handle real-world complexities. Scalability and Reliability: System design ensures systems can grow and handle increased demand without failure. Efficient Resource Management: It helps in optimizing resource allocation, ensuring fast and responsive applications. Adaptability : System design enables the creation of systems that can evolve with changing business needs, reducing long-term costs. Architectural Understanding: Learning different system architectures (e.g., microservices, monolithic) helps in building applications suited to various needs. Interview Preparation: Mastering system design is key to excelling in system design interviews, commonly asked in tech company hiring processes. Basics System Design Introduction - HLD & LLD Functional and Non Functional Requirements High Level Design What is High Level Design? System Architectural Styles Monolithic Architecture Microservices Monolithic vs Microservices Architecture Event-Driven Architecture Serverless Architecture Stateful vs. Stateless Architecture Pub/Sub Architecture Scalability Horizontal and Vertical Scaling Which Scalability approach is right for our Application? Primary Bottlenecks that Hurt the Scalability of an Application Databases in Designing Systems Choosing a Database - SQL or NoSQL File and Database Storage Systems Database Replication in System Design Database Sharding Block, Object, and File Storage Normalization Process in DBMS SQL Query Optimization Denormalization in Databases Intro to Redis Consistency, Availability, Reliability & Maintainability Availability in System Design How to achieve High Availability? Consistency in System Design Consistency pattern CAP Theorem Reliability in System Design Fault Tolerance in System Design Maintainability Load Balancing Concurrency and Parallelism Load Balancer Load Balancing Algorithms Consistent Hashing Latency, Throughput and Caching Latency and Throughput Caching in System Design API Gateway, Message Queues & Rate Limiting What is API Gateway Message Queues Rate Limiting Rate Limiting Algorithm Protocols, CDN, Proxies & WebSockets Communication Protocols Domain Name System DNS Caching Time to Live(TTL) Content Delivery Network(CDN) Proxies in System Design Forward Proxy vs Reverse Proxy Websockets Testing Unit Testing Integration Testing CI/CD Pipeline Security Measures Security Measures in System Design Authentication and Authorization Secure Socket Layer (SSL) and Transport Layer Security (TLS) Secure Software Developement Life Cycle (SSDLC) Data Backup and Disaster Recovery Distributed System Design Consensus Algorithms in Distributed System Distributed Tracing Secure Communication in Distributed System Cost & Performance Optimizations Software Cost Estimation Performance Optimization Techniques Low Level Design(LLD) Core Concepts Object-Oriented Programing(OOP) Concepts Modularity and Interfaces What is Low Level Design or LLD Design Principles SOLID Principles DRY Principle KISS Principle YAGNI Principle UML Unified Modeling Language (UML) Design Patterns Design Patterns Singleton Pattern Factory Method Abstract Factory Builder Pattern Prototype Pattern Adapter Pattern Decorator Pattern Composite Pattern Proxy Pattern Facade Pattern Observer Pattern Strategy Pattern Command Pattern State Pattern Template Method Pattern Interview Questions & Answers of System Design URL Shortening Service Design Dropbox Design Twitter System Design Netflix – Complete Architecture System Design of Uber App – Uber System Architecture Design BookMyShow Designing Facebook Messenger Designing Whatsapp Messenger Designing Instagram Designing Airbnb System Designing of Airline Management System Common Design Interview Questions Tips for System Design interview How to Crack System Design Round in Interviews? 5 Tips to Crack Low-Level System Design Interviews 5 Common System Design Concepts for Interview Preparation 6 Steps To Approach Object-Oriented Design Questions in Interview System Design Life Cycle Visit Course System Design Life Cycle Introduction of SOLID Design Introduction to the Design Patterns Creational Design Patterns System Design Tutorial | A complete Overview Comment N nikhilaggarwal3 Follow 320 Improve N nikhilaggarwal3 Follow 320 Improve Article Tags : System Design Tutorials Like 744k+ interested Geeks DSA to Development: A Complete Guide Explore 39k+ interested Geeks GATE CSE Rank Booster with Expert-Curated Questions Explore 210k+ interested Geeks Competitive Programming - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/advertise-with-us/", "title": "Advertise with us", "text": "Advertise with us Data Structure Java Python HTML Interview Preparation Courses Tutorials Practice Jobs DSA Practice Problems C C++ Java Python JavaScript Data Science Machine Learning Courses Linux DevOps We are GeeksforGeeks, the largest and most popular tech community among developers Tap into the monthly traffic of 200 Million+ niche audience of tech students and working professionals Achieve higher conversions with better targeting Discover audience globally Create impactful brand partnerships with us, through ads, content integration, hackathons, bootcamps, coding contests, newsletters, social media campaigns and more Get in Touch Explore Solutions Scroll for more Why Us Get the results that matter Know more Build brand awareness with 35 Million+ registered users Higher Conversion Achieve higher conversion with 90% Ads Viewability Long term results Achieve long term results with 90% Organic Traffic Generate Leads Generate lead with 20 million+ Logged in users About Us We spark action with our audience. Expertise that everybody counts on GeeksforGeeks has made a difference in the lives of many students by providing free knowledge on how to obtain a dream career and by assisting authors all over the world to earn by generating and sharing content, which is why the Geeks community of users are so engaged and devoted. Stay Ahead with Our Recurring Events Discover Ongoing Opportunities to Elevate Your Business Growth P POTD X Recurring brand exposure to 60,000+ daily unique users J Job-A-Thon X 1,00,000+ registrations C Courses/Bootcamp X 47,000+ registrations H Hackathon X 54,000+ registrations C Content Integration Millions of organic views Successful Campaigns GeeksforGeeks has run successful campaigns for: Google, AMD, Amazon, Hostinger, Hirist, Kamatera, Times Education Group, Titan, Surfshark, Updf, Airdroid & other 135+ tech and non-tech brands. View Our Presence 216k followers 355k followers 1.9M followers 66k followers 700k followers User Statistics Tier 1 Cities 45 Tier 2 Cities 35 Tier 3 Cities 20 Male Population 70 Female Population 30 18-35 years Geeks 70 Wide array of advertisements Support for Multiple desktop banner & operating system based on your choice 300X600 728X90 300X250 160X600 336X280 728X250 Know more Support for Multiple mobile banner & operating system based on your choice 320X50 336X280 Know more Solutions to offer Employer Branding Product/ Tech Learning Content Integration Tech Events Social Media Campaigns Podcast Campus Connect Hiring Challenge Hackathon Courses/ Bootcamp Email Marketing Youtube Webinars & Workshops Diverse Audience Profiles Technology/Gadget enthusiastic Media & Entertainment Frequently Dining Out Business Travelers Shoppers Movie Lovers Who we serve Successfully served 2000+ tech and non-tech brands, including: Google Amazon Microsoft AMD Oracle Adobe Indeed Wix RazorPay Hostinger Chroma Zoho Contact us We provide customizable solutions to accommodate your advertising and employer branding preferences. Get a call back Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Advertise with us Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved"}
{"url": "https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/", "title": "Graph  Algorithms - GeeksforGeeks", "text": "Graph Algorithms - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Graph Algorithms Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 40 Likes Like Report Graph is a non-linear data structure like tree data structure . The limitation of tree is, it can only represent hierarchical data. For situations where nodes or vertices are randomly connected with each other other, we use Graph. Example situations where we use graph data structure are, a social network, a computer network, a network of locations used in GPS and many more examples where different nodes or vertices are connected without any hierarchic or constraint on structure. Basics Graph and its representations BFS and DFS Breadth First Traversal Depth First Traversal Difference between BFS and DFS Rotten Tomatoes Islands in a Graph Flood Fill Check for Bipartite Word Ladder Snakes and Ladder Water Jug problem Pacific Atlantic Water Flow Shortest Path in Binary Matrix Clone a Graph Transitive Closure of a Graph using DFS Cycles Cycle in a Directed Graph Cycle in an undirected graph Cycle in a graph using colors Negative cycle in a Graph | (Bellman Ford) Cycles of length n Clone a Directed Acyclic Graph Disjoint Set Data Structure or Union-Find Algorithm Shortest Path Dijkstra’s shortest path a Bellman–Ford Floyd Warshall Johnson’s algorithm Shortest Path in Directed Acyclic Graph Dial’s Algorithm Multistage Graph (Shortest Path) Shortest path in an unweighted graph Minimum mean weight cycle algorithm 0-1 BFS (Shortest Path Minimum weight cycle D’Esopo-Pape Algorithm Minimum Spanning Tree Prim’s Minimum Spanning Tree (MST) Kruskal’s Minimum Spanning Tree Prim’s vs Kruskal’s algorithm for MST Applications of Minimum Spanning Tree Problem Minimum cost to connect all cities Total number of Spanning Trees in a Graph Minimum Product Spanning Tree Reverse Delete Algorithm for Minimum Spanning Tree Boruvka’s algorithm for Minimum Spanning Tree Topological Sorting Topological Sorting All topological sorts of a Directed Acyclic Graph Kahn’s Algorithm for Topological Sorting Maximum edges that can be added to DAG so that is remains DAG Longest Path in a Directed Acyclic Graph Topological Sort of a graph using departure time of vertex Find Itinerary from a given list of tickets Connectivity in Graph Articulation Points (or Cut Vertices) in a Graph Biconnected Components Bridges in a graph Eulerian path and circuit Fleury’s Algorithm for printing Eulerian Path or Circuit Strongly Connected Components Count all possible walks from a source to a destination with exactly k edges Euler Circuit in a Directed Graph Length of shortest chain to reach the target word Find if an array of strings can be chained to form a circle Tarjan’s Algorithm to find strongly connected Components Paths to travel each nodes using each edge (Seven Bridges of Königsberg) Dynamic Connectivity | Set 1 (Incremental) Maximum Flow in Graph Max Flow Problem Introduction Ford-Fulkerson Algorithm for Maximum Flow Problem Find maximum number of edge disjoint paths between two vertices Find minimum s-t cut in a flow network Maximum Bipartite Matching Channel Assignment Problem Introduction to Push Relabel Algorithm Karger’s Algorithm- Set 1- Introduction and Implementation Dinic’s algorithm for Maximum Flow Some must do Problems Find length of the largest region in Boolean Matrix Count number of trees in a forest A Peterson Graph Problem Clone an Undirected Graph Graph Coloring (Introduction and Applications) Traveling Salesman Problem (TSP) Implementation Vertex Cover Problem | Set 1 (Introduction and Approximate Algorithm) K Centers Problem | Set 1 (Greedy Approximate Algorithm) Erdos Renyl Model (for generating Random Graphs) Chinese Postman or Route Inspection | Set 1 (introduction) Hierholzer’s Algorithm for directed graph Check whether a given graph is Bipartite or not Snake and Ladder Problem Boggle (Find all possible words in a board of characters) Hopcroft Karp Algorithm for Maximum Matching-Introduction Minimum Time to rot all oranges Construct a graph from given degrees of all vertices Determine whether a universal sink exists in a directed graph Number of sink nodes in a graph Two Clique Problem (Check if Graph can be divided in two Cliques) If you are looking for difficulty-wise list of problems, please refer to Graph Data Structure . Some Quizzes Quizzes on Graph Traversal Quizzes on Graph Shortest Path Quizzes on Graph Minimum Spanning Tree Quizzes on Graphs Quick Links : Top 10 Interview Questions on Depth First Search (DFS) Some interesting shortest path questions Practice Problems on Graphs Recommended: Learn Data Structure and Algorithms | DSA Tutorial Introduction to Graph Visit Course Introduction to Graph Graph Representation (Adjacency Matrix) Graph Representation (Adjacency List) GRAPH Data Structure | What is Graph? | DSA Course Comment H harendrakumar123 Follow 40 Improve H harendrakumar123 Follow 40 Improve Article Tags : Graph DSA Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/hashing-data-structure/", "title": "Hashing in Data Structure - GeeksforGeeks", "text": "Hashing in Data Structure - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Hashing in Data Structure Last Updated : 10 Sep, 2025 Comments Improve Suggest changes 35 Likes Like Report Hashing is a technique used in data structures that efficiently stores and retrieves data in a way that allows for quick access. Hashing involves mapping data to a specific index in a hash table (an array of items) using a hash function. It enables fast retrieval of information based on its key. The great thing about hashing is, we can achieve all three operations (search, insert and delete) in O(1) time on average. Hashing is mainly used to implement a set of distinct items (only keys) and dictionaries (key value pairs). Hashing in Data Structure Basics Introduction Applications Separate Chaining for Collision Handling Open Addressing for Collision Handling Easy Problems Check tor Subset Check for Disjoint Check for Equal Fizz Buzz Max distance between two occurrences Duplicate within K Distance Intersection of Two Arrays Union of Two Arrays Most Frequent Element 2 Sum - Find if there is any pair 2 Sum - Count Pairs Count Pairs with Given Diff Only repetitive element from 1 to n-1 Missing of a Range Missing from Min to Max of Array Minimum Subsets with distinct Minimum Removals for No Common Maximum points on the same line Medium Problems Pair Sums Divisible by k Subarray with sum divisible by k 3 Sum - Count all triplets with Given sum 3 Sum – Find All Triplets with Zero Sum Itinerary from a given list of tickets Longest Subarray with Majority Greater Than K Number of Employees Under every Employee Largest subarray with 0 sum Subarray with given sum Longest Consecutive subsequence Largest Fibonacci Subset Consecutive Subset Partitioning Distincts in every window of size k Insert, delete, search and getRandom Min insertions for a palindrome permutation Smallest subarray with k distinct numbers All pairs (a, b) in an array such that a % b = k Group words with same set of characters k-th distinct (or non-repeating) . Hard Problems Represent Fraction as String 4 Sum – Count quadruplets 4 Sum – Find all Quadruplets 4 Sum - From four sorted arrays Largest subarray with equal 0s and 1s Longest Common Sum Span Palindrome Substring Queries Subarrays having distinct count Maximum array from two arrays Sum of all unique sub-array sums. Recaman’s sequence Longest strict bitonic subsequence Duplicate Subtrees Submatrix with corners as 1 Quick Links : ‘Practice Problems’ on Hashing Top Hashing Interview Questions ‘Quizzes’ on Hashing Learn Data Structure and Algorithms | DSA Tutorial Introduction to Hashing Visit Course Introduction to Hashing Hashing Application Comment H harendrakumar123 Follow 35 Improve H harendrakumar123 Follow 35 Improve Article Tags : Hash DSA Like 212k+ interested Geeks Learn C with Data Structures - Self Paced Explore 17k+ interested Geeks CBSE Class 12 Computer Science Explore 3k+ interested Geeks GATE CSE 2028 [Semester & Placement Preparation] Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/sorting-algorithms/", "title": "Sorting Algorithms - GeeksforGeeks", "text": "Sorting Algorithms - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Sorting Algorithms Last Updated : 11 Oct, 2025 Comments Improve Suggest changes 51 Likes Like Report A Sorting Algorithm is used to rearrange a given array or list of elements in an order. For example, a given array [10, 20, 5, 2] becomes [2, 5, 10, 20] after sorting in increasing order and becomes [20, 10, 5, 2] after sorting in decreasing order. There exist different sorting algorithms for different different types of inputs, for example a binary array, a character array, an array with a large range of values or an array with many duplicates or a small vs large array. The algorithms may also differ according to output requirements. For example, stable sorting (or maintains original order of equal elements) or not stable. Sorting is provided in library implementation of most of the programming languages. These sorting functions typically are general purpose functions with flexibility of providing the expected sorting order (increasing or decreasing or by a specific key in case of objects). Basics Introduction to Sorting Applications of Sorting Sorting Algorithms: Comparison Based : Selection Sort , Bubble Sort , Insertion Sort , Merge Sort , Quick Sort , Heap Sort , Cycle Sort , 3-way Merge Sort Non Comparison Based : Counting Sort , Radix Sort , Bucket Sort , Pigeonhole Sort Hybrid Sorting Algorithms : IntroSort , TimSort Library Implementations: qsort() in C sort() in C++ STL Arrays.sort() in Java with examples Collections.sort() in Java with Examples Sort a List in Python Sorting in JavaScript Easy Problems Check if an array is Sorted Sort an array of two types Sort a String Sort a Matrix Sort a Linked List Sort in Wave Form Sort from Different Machines Check if any two intervals overlap Missing elements of a range Sort by set bits counts Sort even and odd placed in different orders Sort strings by lengths Merge Two Sorted Arrays Sort when two halves are sorted 2 Sum - Pair in a Sorted Array Intersection & Union of two Sorted Meeting Rooms K-th smallest after removing given Set Medium Problems Sort by Frequency Minimum Increments to Make Unique Merge Overlapping Intervals Maximum intervals overlap Minimum Platforms Chocolate Distribution Problem Min and Max Amount to Buy All Three Way Partitioning Sort an array of 0s, 1s and 2s Sort a linked list of 0s, 1s and 2s Inversion count K-th Smallest Element K Smallest Elements 3 Sum - Find Any 3 Sum - Closest Triplet Smallest Difference Triplet from Three arrays Merge K Sorted Arrays Min Unsorted Subarray to make array sorted Sort a nearly sorted array Sort n numbers in range from 0 to n^2 – 1 Sort an array of 1 to n Sort according to order defined by another Permute two arrays such that all pair suns are greater than K 4 Sum - Find Any [More problems an 4 Sum are in Hard Section] Hard Problems Merge Without Extra Space Top K Frequent Elements 3 Sum - Distinct Triplets 4 Sum - Distinct Quadruples 4 Sum - All Quadruples 4 Sum - Closest Quadruple Surpasser Counts in an Array Minimum consecutive number subsets Min swaps to reach given array Making Array Elements Same Sort after applying an equation Closest Pair of Points Quick Links : ‘Practice Problems’ on Sorting Top Sorting Interview Questions ‘Quizzes’ on Sorting Learn Data Structure and Algorithms | DSA Tutorial Overview of Sorting Algorithms Visit Course Overview of Sorting Algorithms Stability in Sorting Algorithm Comment H harendrakumar123 Follow 51 Improve H harendrakumar123 Follow 51 Improve Article Tags : Sorting DSA Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/stack-data-structure/", "title": "Stack Data Structure - GeeksforGeeks", "text": "Stack Data Structure - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Stack Data Structure Last Updated : 31 Aug, 2025 Comments Improve Suggest changes 48 Likes Like Report A Stack is a linear data structure that follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out) . LIFO implies that the element that is inserted last, comes out first and FILO implies that the element that is inserted first, comes out last. It behaves like a stack of plates, where the last plate added is the first one to be removed. Think of it this way: Pushing an element onto the stack is like adding a new plate on top. Popping an element removes the top plate from the stack. Applications of Stack Basics Introduction to Stack Stack Array Implementation Stack Linked List Implementation Stack Implementation using Deque Applications of Stack Implementations in Different Languages Stack in C++ STL Stack in Java Stack in Python Stack in C# Stack in JavaScript Easy Problems The Celebrity Problem Queue using Stacks Two stacks in an array Infix to Postfix Prefix to Infix Prefix to Postfix Postfix to Prefix Postfix to Infix Infix To Prefix Check for balanced parentheses Evaluation of Postfix Expression Reverse a stack using recursion Reversing the first K of a Queue A DS with O(1) Operations Medium Problems k Stacks in an Array Mergable Stack Stack using Queues Previous Smaller Element Next Greater Element Stock Span Problem Buildings Facing Sun Next Smaller of next Greater Next Greater Frequency Element Max product of indexes of greater on left and right Iterative Tower of Hanoi Sort a Stack Reverse a Stack Delete middle of a stack Check for queue sortable Check for stack sortable Index of closing bracket for a given opening bracket Max Diff between nearest left and right smaller Delete consecutive same words Hard Problems Largest Rectangular Area in a Histogram Sum of Max of all Subarrays Max of Mins of every window size Stack that supports getMin() Stack with max frequency Longest valid substring Check Redundant Bracket Stack Permutations Remove brackets containing + and – operators Quick Links : ‘Practice Problems’ on Stack ‘Videos’ on Stack ‘Quizzes’ on Stack Recommended: DSA Tutorial Stack Data Structure Visit Course Stack Data Structure Applications of Stack Comment H harendrakumar123 Follow 48 Improve H harendrakumar123 Follow 48 Improve Article Tags : Stack DSA Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/searching-algorithms/", "title": "Searching Algorithms - GeeksforGeeks", "text": "Searching Algorithms - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Searching Algorithms Last Updated : 23 Sep, 2025 Comments Improve Suggest changes 27 Likes Like Report Searching algorithms are essential tools in computer science used to locate specific items within a collection of data. In this tutorial, we are mainly going to focus upon searching in an array. When we search an item in an array, there are two most common algorithms used based on the type of input array. Linear Search : It is used for an unsorted array. It mainly does one by one comparison of the item to be search with array elements. It takes linear or O(n) Time. Binary Search : It is used for a sorted array. It mainly compares the array's middle element first and if the middle element is same as input, then it returns. Otherwise it searches in either left half or right half based on comparison result (Whether the mid element is smaller or greater). This algorithm is faster than linear search and takes O(Log n) time. Basics Introduction to Searching Two Pointers Technique Binary Search Implementations binary_search, lower_bound and upper_bound in C++ Arrays.binarySearch() in Java Arrays.binarySearch() in Java for Search in subarray Collections.binarySearch() in Java Bisect in Python List.BinarySearch in C# Easy Problems Largest in an Array Second Largest in an array Largest three in an array Missing Number First Repeating Missing and Repeating Count 1’s in a sorted binary array k largest(or smallest) Elements Kth smallest in row and column-wise sorted Common elements in 3 sorted Ceiling & Floor in a Sorted Max in a Bitonic More than n/k times Appearing Pair Sum Closest to Target Medium Problems Triplets with zero sum Partition Point Largest pair sum K’th Smallest in Unsorted Array Search , Min & Max in a Sorted & Rotated Peak element Fixed Point K Most Frequent Words K closest elements Closest Pair from two sorted Binary Search for Rationals Missing Element in AP Hard Problems Median of two sorted Median of two sorted of different sizes Search in an almost sorted Search in a sorted infinite Pair sum in a sorted and rotated K’th Smallest/Largest Element in Unsorted K’th largest element in a stream More Searching Algorithms Sentinel Linear Search Meta Binary Search | One-Sided Binary Search Ternary Search Jump Search Interpolation Search Exponential Search Fibonacci Search Best First Search (Informed Search) Comparisons Linear Search vs Binary Search Interpolation search vs Binary search Why is Binary Search preferred over Ternary Search? Is Sentinel Linear Search better than normal Linear Search? Quick Links: ‘Practice Problems’ on Searching Top Searching Interview Questions ‘Quizzes’ on Searching Learn Data Structure and Algorithms | DSA Tutorial Comment H harendrakumar123 Follow 27 Improve H harendrakumar123 Follow 27 Improve Article Tags : Searching DSA Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/data-structures/linked-list/", "title": "Linked List Data Structure - GeeksforGeeks", "text": "Linked List Data Structure - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Linked List Data Structure Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 71 Likes Like Report A linked list is a fundamental data structure in computer science. It mainly allows efficient insertion and deletion operations compared to arrays . Like arrays, it is also used to implement other data structures like stack, queue and deque. Here’s the comparison of Linked List vs Arrays Linked List: Data Structure: Non-contiguous Memory Allocation: Typically allocated one by one to individual elements Insertion/Deletion: Efficient Access: Sequential Array: Data Structure: Contiguous Memory Allocation: Typically allocated to the whole array Insertion/Deletion: Inefficient Access: Random Basics Singly Linked List Doubly Linked List Circular Linked List Applications and Advantages Operations Length of Linked List Print Linked List Search in a Linked List Linked List Insertion Deleting a given key Deleting at given position Delete a Linked List Nth Node from Start Nth Node from End Size of Doubly Linked List Easy Problems Remove every k-th node Middle of a Linked List Count Occurrences in a Linked List Circular Linked List Traversal Check if Circular Count Nodes in Circular List Deletion from a Circular Linked List Singly to circular Conversion Exchange first and last nodes in Circular Delete in a Doubly Linked List Reverse a Singly Linked List Reverse a Doubly Linked List Medium Problems Swap Nodes in Pairs Detect loop in a linked list Length of loop in linked list Design Browser History Remove duplicates from a sorted linked list Remove Duplicates from an Unsorted Linked List Intersection of two Sorted Linked Lists Partition a List QuickSort on Singly Linked List Split a Circular Linked List into two halves Merge Two Sorted Linked Lists Union and Intersection Merge Sort for Doubly Linked List Pairs with Sum in doubly linked list Insert in sorted way in doubly linked list Remove duplicates from an unsorted DLL Rotate a Linked List Rotate Doubly linked list by N nodes Delete a node with only its pointer given Segregate even and odd nodes Hard Problems Merge K Sorted Lists Intersection point of two Linked Lists. Implement LRU Cache Clone a linked list with random pointer Binary Tree to Doubly Linked List Reverse a Singly Linked List in Groups Reverse a Doubly Linked List in Groups Sublist Search Linked list from 2D matrix Rotate Linked List block wise Multiply two numbers as Lists Delete N nodes after M nodes Quick Links : ‘Practice Problems’ on Linked List ‘Quizzes’ on Linked List Learn Data Structure and Algorithms Problems with Array Data Structure Visit Course Problems with Array Data Structure Applications of Linked List Comment H harendrakumar123 Follow 71 Improve H harendrakumar123 Follow 71 Improve Article Tags : Linked List DSA Data Structures Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/array-data-structure/", "title": "Array Data Structure - GeeksforGeeks", "text": "Array Data Structure - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Array Data Structure Last Updated : 31 Jul, 2025 Comments Improve Suggest changes 56 Likes Like Report In this article, we introduce array, implementation in different popular languages, its basic operations and commonly seen problems / interview questions. An array stores items (in case of C/C++ and Java Primitive Arrays) or their references (in case of Python, JS, Java Non-Primitive) at contiguous locations. It offers mainly the following advantages over other data structures. Random Access : i-th item can be accessed in O(1) Time as we have the base address and every item or reference is of same size. Cache Friendliness : Since items / references are stored at contiguous locations, we get the advantage of locality of reference. It is not useful in places where we have operations like insert in the middle, delete from middle and search in a unsorted data. It is a fundamental and linear data structure using which we build other data structures like Stack Queue, Deque, Graph, Hash Table, etc. Basics Introduction to Arrays Applications of Array In Different Language Arrays in C Vector in C++ STL Arrays in Java ArrayList in Java List in Python Arrays in C# Arrays in JavaScript Basic Problems Print Alternates Leaders in an array Check if Sorted Remove Duplicates from Sorted Generate all Subarrays Reverse an Array Rotate an Array Zeroes to End Min Increments to Make Equal Min Cost to Make Size 1 Easy Problems Duplicate within K Distance Make Even Positioned Greater Sum of all Subarrays Stock Buy and Sell – Multiple Transactions Single Among Doubles Missing Number Missing and Repeating Only Repeating from 1 to n-1 Sorted Subsequence of Size 3 Max Subarray Sum Equilibrium index Two Sum - Find if there is a Pair Two Sum - Closest Pair [More problems on 2 Sum in Medium Section] Split array into three equals Maximum Consecutive 1s with K Flips Prerequisite for the Remaining Problems Binary Search Selection Sort , Insertion Sort , Binary Search , QuickSort , MergeSort , CycleSort , and HeapSort Sort in C++ / Sort in Java / Sort in Python / Sort in JavaScript Two Pointers Technique Prefix Sum Technique Basics of Hashing Window Sliding Technique Medium Problems Make arr[i] = i Maximum Circular Subarray Sum Reorder according to given indexes Product Except Self K-th Largest Sum Subarray Smallest missing number Smallest subarray with sum greater than x Majority Element Count possible triangles Sub-array with given sum Longest Subarray with Equal 0s and 1s Longest Common Span in Two Binary Arrays Construct an array from its pair-sum array 2 Sum - All Pairs 2 Sum - Distinct Pairs 3 Sum - Find Any 3 Sum - Closest Triplet 4 Sum - Find Any [More problems on 4 Sum in Hard Section] Hard Problems Surpasser Count Trapping Rain Water Top K Frequent Elements Kth Missing Positive Number in a Sorted Array Stock Buy and Sell - At Most K Transactions Stock Buy and Sell - At Most 2 Transactions Median in a Stream Smallest Difference Triplet from 3 arrays Max occurred in n ranges 3 Sum - Distinct Triplets 3 Sum - All Triplets 4 Sum - Distinct Quadruples 4 Sum - All Quadruples 4 Sum - Closest Quadruple Expert Problems for Competitive Programmers MO’s Algorithm Square Root (Sqrt) Decomposition Algorithm Sparse Table Range sum query using Sparse Table Range Minimum Query (Square Root Decomposition and Sparse Table) Range LCM Queries Merge Sort Tree for Range Order Statistics Minimum number of jumps to reach end Space optimization using bit manipulations Max value of Sum( i*arr[i]) with only rotations allowed Quick Links : ‘Practice Problems’ on Arrays Top Array Interview Questions ‘Quizzes’ on Arrays What is Array What is Array Array Practice Problems Comment H harendrakumar123 Follow 56 Improve H harendrakumar123 Follow 56 Improve Article Tags : DSA Arrays Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/design-and-analysis-of-algorithms/", "title": "Analysis of Algorithms - GeeksforGeeks", "text": "Analysis of Algorithms - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course Analysis of Algorithms Last Updated : 25 Sep, 2025 Comments Improve Suggest changes 30 Likes Like Report Analysis of Algorithms is a fundamental aspect of computer science that involves evaluating performance of algorithms and programs. Efficiency is measured in terms of time and space . Basics Why is Analysis Important? Order of Growth Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Big-O Notation Theta - Θ Notation Big – Ω (Big- Omega) Notation Time Complexity Space Complexity Big O vs, Big Omega vs Theta Examples of Big-O analysis Practice Questions on Time Complexity Analysis Quiz on Time Complexity Analysis Analysis Examples Analyzing Loops Analyzing Recursive Functions Amortized Analysis Some Advance topics P, NP, CoNP, NP hard and NP complete Proof that Clique Decision problem is NP-Complete Proof that Independent Set in Graph theory is NP Complete Prove that a problem consisting of Clique and Independent Set is NP Complete Prove that Dense Subgraph is NP Complete by Generalisation Prove that Sparse Graph is NP-Complete Analysis of Algorithms (Background) Visit Course Analysis of Algorithms (Background) Order of Growth Big O Notation Omega Notation Theta Notation | Video Analysis of Common Loops Analysis of Recursion Space Complexity Comment H harendrakumar123 Follow 30 Improve H harendrakumar123 Follow 30 Improve Article Tags : DSA Algorithms-Analysis of Algorithms Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/sql/guide-to-databases/", "title": "Guide to Databases - GeeksforGeeks", "text": "Guide to Databases - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Databases SQL MySQL PostgreSQL PL/SQL MongoDB SQL Cheat Sheet SQL Interview Questions MySQL Interview Questions PL/SQL Interview Questions Learn SQL and Database Sign In ▲ Open In App Share Your Experiences SQL Tutorial Basics What is SQL? SQL Data Types SQL Operators SQL Commands | DDL, DQL, DML, DCL and TCL Commands SQL Database Operations SQL CREATE TABLE Queries & Operations SQL SELECT Query SQL INSERT INTO Statement SQL UPDATE Statement SQL DELETE Statement SQL - WHERE Clause SQL | Aliases SQL Joins & Functions SQL Joins (Inner, Left, Right and Full Join) SQL CROSS JOIN SQL | Date Functions SQL | String functions Data Constraints & Aggregate Functions SQL NOT NULL Constraint SQL PRIMARY KEY Constraint SQL Count() Function SQL SUM() Function SQL MAX() Function AVG() Function in SQL Advanced SQL Topics SQL Subquery Window Functions in SQL SQL Stored Procedures SQL Triggers SQL Performance Tuning SQL TRANSACTIONS Database Design & Security Introduction of ER Model Introduction to Database Normalization SQL Injection SQL Data Encryption SQL Backup What is Object-Relational Mapping (ORM) in DBMS? DSA to Development Course Guide to Databases Last Updated : 30 Aug, 2025 Comments Improve Suggest changes 16 Likes Like Report This is a complete guide to databases, where you’ll learn the foundations and advanced concepts of the most widely used database technologies - SQL: The standard language to interact with relational databases. MySQL: A popular open-source database used in web applications and enterprises. PostgreSQL: An advanced open-source relational database known for reliability and performance. PL/SQL: Oracle’s procedural extension of SQL for writing powerful database programs. MongoDB: A NoSQL database that stores data in flexible, JSON-like documents. Here, you’ll understand how each of these works, what they’re used for, and how they fit into real-world applications. 1. SQL SQL Tutorial SQL Interview Questions SQL Cheat Sheet SQL Exercises 2. MySQL MySQL Tutorial MySQL Interview Questions 3. PostgreSQL PostgreSQL Tutorial PostgreSQL Cheat Sheet PostgreSQL Exercises 4. PL/SQL PL/SQL Tutorial PL/SQL Interview Questions and Answers 5. MongoDB MongoDB Tutorial Complete MongoDB Roadmap MongoDB Interview Questions with Answers MongoDB Exercises Comment U udaymityym1 Follow 16 Improve U udaymityym1 Follow 16 Improve Article Tags : SQL Like 10k+ interested Geeks GATE DA 2026 Online Course [Live Classes] Explore 532k+ interested Geeks Data Science Project Based Learning Explore 17k+ interested Geeks CBSE Class 12 Computer Science Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/blogs/geeksforgeeks-practice-best-online-coding-platform/", "title": "GeeksforGeeks Practice - Leading Online Coding Platform - GeeksforGeeks", "text": "GeeksforGeeks Practice - Leading Online Coding Platform - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Tutorial Interview Questions Quizzes Must Do Advanced DSA System Design Aptitude Puzzles Interview Corner DSA Python Sign In ▲ Open In App Share Your Experiences DSA Fundamentals Logic Building Problems Analysis of Algorithms Data Structures Array Data Structure String in Data Structure Hashing in Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure Tree Data Structure Graph Data Structure Trie Data Structure Algorithms Searching Algorithms Sorting Algorithms Introduction to Recursion Greedy Algorithms Graph Algorithms Dynamic Programming or DP Bitwise Algorithms Advanced Segment Tree Binary Indexed Tree or Fenwick Tree Square Root (Sqrt) Decomposition Algorithm Binary Lifting Geometry Interview Preparation Interview Corner GfG160 Practice Problem GeeksforGeeks Practice - Leading Online Coding Platform Problem of The Day - Develop the Habit of Coding DSA to Development Course GeeksforGeeks Practice - Leading Online Coding Platform Last Updated : 26 Jul, 2025 Comments Improve Suggest changes 90 Likes Like Report GeeksforGeeks Practice is an online coding platform designed to help developers and students practice coding online and sharpen their programming skills with the following features. GfG 160 : This consists of most popular interview problems organized topic wise and difficulty with with well written editorials and videos. DSA 360° : All-in-one DSA guide from basics to advanced — perfect for coding rounds, and building logic, with topic-wise problem sets. Topic Wise and Company Wise : You may browse coding practice problems by applying different filters, like topics and company name. POTD : POTD is Problem of the Day to build your daily coding habits. Language C++ Java Python Featured Sprints Top DSA Sheet Top 50 Array Problems Top 50 String Problems Top 50 Tree Problems Top 50 DP Problems SDE Sheet Different Levels of Problems Easy Level Medium Level Hard Level Why Choose GeeksforGeeks Coding Platform? 1. Vast Problem Library GeeksforGeeks Practice offers a comprehensive collection of coding problems spanning multiple topics and difficulty levels. With thousands of questions available, learners can continually challenge themselves and enhance their problem-solving skills. 2. Company-Wise Preparation GeeksforGeeks coding platform provides tailored problem sets categorized by top tech companies, enabling students to focus on questions commonly asked in interviews by specific companies like Google, Microsoft, and Amazon. This helps learners prepare effectively for targeted job roles and company-specific interviews. 3. Contests (POTD) GeeksforGeeks coding platform offers regular coding contests, including the Problem of the Day (POTD), allowing learners to test their skills in real-time scenarios. Participants also have the exciting opportunity to win exclusive GeeksforGeeks goodies, adding a fun incentive while sharpening their competitive programming skills. Who Can Use Our Coding Platform? Beginners: Those new to coding can start with our easy-level problems to build a strong foundation in programming concepts and logic. Intermediate Programmers: With a solid grasp of the basics, intermediate learners can tackle medium-level challenges to enhance their skills and prepare for competitive programming. Advanced Coders: Experienced developers can dive into hard-level problems to push their limits and refine their problem-solving techniques for real-world applications. Job Seekers: Our company-specific problem sets and curated interview preparation sheets help job seekers efficiently prepare for technical interviews at top tech companies. View more Comprehensive Range of Problems Data Structure Arrays LinkedList Trees Graphs Hash Strings View more Algorithms Sorting Searching Backtracking Dynamic Programming Greedy Divide and Conquer View more Company Microsoft Google Amazon Adobe Atlasssian Samsung Comment T tarandeepqs9r Follow 90 Improve T tarandeepqs9r Follow 90 Improve Article Tags : DSA GFG-Course GFG-Practice Like 1483k+ interested Geeks Data Structures and Algorithms - Self Paced Explore 115k+ interested Geeks Data Structures & Algorithms in JavaScript - Self Paced Explore 356k+ interested Geeks Data Structures & Algorithms in Python - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/software-engineering/articles-on-computer-science-subjects-gq/", "title": "Computer Science Core Subjects - GeeksforGeeks", "text": "Computer Science Core Subjects - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DSA Practice Problems C C++ Java Python JavaScript Data Science Machine Learning Courses Linux DevOps SQL Web Development System Design Aptitude Sign In ▲ Open In App Share Your Experiences DSA Tutorial - Learn Data Structures and Algorithms System Design Tutorial Aptitude Questions and Answers Web Development Technologies AI, ML and Data Science Tutorial DevOps Tutorial DSA to Development Course Computer Science Core Subjects Last Updated : 23 Sep, 2025 Comments Improve Suggest changes 25 Likes Like Report This guide is designed to help you learn core computer science subjects. It covers topics like Operating Systems, DBMS, Computer Networks, Programming, Data Structures, and more, offering detailed tutorials. 1. Computer Science Core Foundations Computer Fundamentals Engineering Mathematics Maths for Computer Science 2. Systems & Networking Operating Systems Computer Organization and Architecture Computer Networks Theory of Computation Compiler Design Distributed Systems Linux Tutorial Cybersecurity Tutorial 3. Data and Database Technologies Database Management System (DBMS) Data Warehousing 4. Data Science Machine Learning Tutorial Artificial Intelligence Tutorial Data Analysis Tutorial Data Science Tutorial 5. Programming & Software Development Software Engineering Web Technology Comment K kartik Follow 25 Improve K kartik Follow 25 Improve Article Tags : Tutorials Computer Basics Like 39k+ interested Geeks GATE CSE Rank Booster with Expert-Curated Questions Explore 36k+ interested Geeks GATE CSE 2026 Online Course [Live Weekday Classes ] Explore 4k+ interested Geeks GATE CS/IT 2027 Complete Course [with Placement Preparation] Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/devops-tutorial/", "title": "DevOps Tutorial - GeeksforGeeks", "text": "DevOps Tutorial - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! DevOps Cloud Computing Git AWS Docker Kubernetes Microsoft Azure Google Cloud Platform Python Golang Operating System Computer Network Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences DevOps Basics What is DevOps ? DevOps Lifecycle The Evolution of DevOps - 3 Major Trends for Future Version Control Version Control Systems Merge Strategies in Git Which Version Control System Should I Choose? CI & CD What is CI/CD? Understanding Deployment Automation Containerization What is Docker? What is Dockerfile Syntax? Orchestration Kubernetes - Introduction to Container Orchestration Fundamental Kubernetes Components and their role in Container Orchestration How to Use AWS ECS to Deploy and Manage Containerized Applications? Infrastructure as Code (IaC) Infrastructure as Code (IaC) Introduction to Terraform What is AWS Cloudformation? Monitoring and Logging Working with Prometheus and Grafana Using Helm Working with Monitoring and Logging Services Microsoft Teams vs Slack Security in DevOps What is DevSecOps: Overview and Tools DevOps Best Practices for Kubernetes Top 10 DevOps Projects with Source Code [2025] Master DevOps Course DevOps Tutorial Last Updated : 12 Sep, 2025 Comments Improve Suggest changes 117 Likes Like Report DevOps is a combination of two words: \"Development\" and \"Operations.\" It’s a modern approach where software developers and software operations teams work together throughout the entire software life cycle. The goals of DevOps are: Faster and continuous software releases. Reduces manual errors through automation. Built-in Monitoring , detect failures or issues during delivery or in production. Automate testing throughout the software delivery process. Before DevOps, software delivery was slow and manual. Separate teams handled coding, server setup, testing, and deployment, leading to delays and frequent errors due to lack of automation. With DevOps, the process is fast, automated, and collaborative. Using tools like Git, Jenkins, Docker, and Kubernetes, teams can build, test, and deploy code continuously, enabling deployment in hours instead of days. 1. Understanding DevOps Fundamentals In this section, we will cover the basic DevOps fundamentals and terminologies that are essential for a DevOps engineer. DevOps Introduction DevOps Prerequisites Lifecycle of DevOps 2. Linux for DevOps Linux is one of the most widely used operating systems for servers and cloud environment. This section introduces the core Linux concepts, commands, and networking essentials every DevOps engineer should know. What is Linux Operating System? Linux Commands for DevOps Network configuration and troubleshooting commands in Linux SSH Server (sshd) Configuration and Security Options With Examples Learn Linux in Advance with our: Linux Tutorial 3. Source Code Management Source Code Management is one of the key aspects of DevOps. Git is considered to be one of the best tools for version control of source codes. In this section on Source Code Management, we’ll explore the fundamentals of version control using tools like Git, GitHub, GitLab, and Bitbucket. Introduction and Installation of Git How Git Version Control Works? Useful Git Commands and Basic Concepts Introduction to GitHub List of useful GitHub Commands Difference Between GitLab and GitHub How to setup GitLab Repo in Windows 10 Bitbucket vs GitHub Vs GitLab To learn Git in advance, refer: Git Tutorial CI/CD in DevOps CI/CD stands for Continuous Integration and Continuous Deployment/Delivery. It is a core DevOps practice that automates the process of building, testing, and deploying code changes to production faster and more reliably. What is CI/CD? What is Jenkins? Understanding Jenkins CI/CD Pipeline And Its Stages How to Make a CI-CD Pipeline in Jenkins? To learn Jenkins in advance, refer: Jenkins Tutorial 4. Scripting Language for DevOps Scripting language is essential in DevOps as it helps automate repetitive tasks, reduces errors, and saves time. Languages like Bash, YAML, and Python are widely used. What is YAML? YAML Comments How to block comments in YAML Difference between YAML and JSON Python For DevOps: A Complete Guide For Beginners How to run python script Introduction to Linux Shell Scripting How to create a Shell Script Introduction to Bash and Bash Scripting 5. Starting With A Cloud Platform Cloud computing is essential as it powers most modern applications through platforms like AWS, Azure, and Google Cloud. AWS Tutorial Microsoft Azure Tutorial Google Cloud Platform Tutorial 6. Docker Docker is a popular containerization tool that is used to deliver software quickly by using the concept of containerized code which helps for easy management and maintenance of applications. Introduction to Docker Docker Architecture Docker Commands Dockerfile Docker Images Introduction to Docker Compose Docker Storage Docker Networking Docker Ports Docker Registry To learn Docker in advance, refer: Docker Tutorial 7. Kubernetes Kubernetes is used to orchestrate and manage Docker containers at scale. Introduction to Kubernetes Kubernetes Deployments Kubernetes Volumes Kubernetes Secrets Kubernetes Kubectl Kubernetes ConfigMap To learn Kubernetes in advance, refer: Kubernetes Tutorial 8. Infrastructure as a Code IaC enables automating and configuring the infrastructure resources using various tools such as Terraform, CloudFormation, ARM Templates, etc. Introduction to Terraform Terraform Syntax With Examples Introduction to AWS Cloudformation AWS CloudFormation Templates Automation using Chef Using Ansible to Manage Remote Machines To learn more, you can refer to Complete DevOps Roadmap – Beginner to Advanced DevOps Course by GeeksforGeeks Learn DevOps step by step with GeeksforGeeks DevOps courses. These self-paced programs cover everything from Linux, Git, Docker, and Kubernetes to CI/CD, Jenkins, Terraform, Ansible, and cloud platforms like AWS and Azure—helping you build and deploy real-world projects DevOps Bootcamp - Self-Paced Course DevOps Engineering - Planning to Production DevOps Interview Questions Here are the top 70 most commonly asked DevOps interview questions, covering essential topics like CI/CD, configuration management, containerization, cloud services, infrastructure as code, and monitoring tools. DevOps Interview Questions and Answers Important Links DevOps Engineer - Salary, Skills & Career Guide Companies That Use DevOps Careers and Jobs in DevOps Is DevOps for Freshers? DevOps is a hot topic in the IT industry and lots of companies now need a DevOps Engineer to manage their servers, code deployment process, and maintenance of their applications. If you also want to join any organization as a DevOps Engineer without any prior work experience, then it is very important for you to follow these certain tips to get into the world of DevOps. Learn the Fundamentals listed above Gain Hands-on knowledge by practicing and building projects Try to learn and master automation Develop soft skills Network with professionals Always be in the loop of learning and implementing. DevOps Tutorial for beginners | Learn DevOps in 1 hour - Full DevOps Course Comment K kartik Follow 117 Improve K kartik Follow 117 Improve Article Tags : DevOps Tutorials Like 133k+ interested Geeks DevOps Engineering : Planning to Production - Live Explore 52k+ interested Geeks Front-End Interview Preparation Course Explore 80k+ interested Geeks System Design: Low-Level to High-Level - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/system-design-tutorial/", "title": "System Design Tutorial - GeeksforGeeks", "text": "System Design Tutorial - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! System Design Tutorial HLD LLD Functional and Non Functional Life Cycle Design Patterns UML Diagrams System Design Interview Guide Scalability Databases DSA Software Engineering Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences What is System Design System Design Introduction - LLD & HLD System Design Life Cycle | SDLC (Design) What are the components of System Design? Goals and Objectives of System Design Why is it Important to Learn System Design? Important Key Concepts and Terminologies – Learn System Design Advantages of System Design System Design Fundamentals Analysis of Monolithic and Distributed Systems - Learn System Design Requirements Gathering in System Design Differences between System Analysis and System Design Horizontal and Vertical Scaling | System Design Capacity Estimation in Systems Design How to Answer a System Design Interview Problem/Question? Functional and Non Functional Requirements Web Server, Proxies and their role in Designing Systems Scalability in System Design What is Scalability and How to achieve it? Which Scalability approach is right for our Application? - System Design Primary Bottlenecks that Hurt the Scalability of an Application - System Design Databases in Designing Systems Complete Guide to Database Design - System Design SQL vs. NoSQL - Which Database to Choose in System Design? File and Database Storage Systems in System Design Block, Object, and File Storage in System Design Database Sharding - System Design Database Replication in System Design High Level Design(HLD) What is High Level Design? - Learn System Design Availability in System Design Consistency in System Design Reliability in System Design CAP Theorem in System Design What is API Gateway? What is Content Delivery Network(CDN) in System Design What is Load Balancer & How Load Balancing works? Caching - System Design Concept Communication Protocols in System Design Activity Diagrams - Unified Modeling Language (UML) Message Queues - System Design Low Level Design(LLD) What is Low Level Design or LLD? Authentication vs Authorization in LLD - System Design Performance Optimization Techniques for System Design Object-Oriented Analysis and Design(OOAD) Data Structures and Algorithms for System Design Containerization Architecture in System Design Modularity and Interfaces In System Design Unified Modeling Language (UML) Diagrams Data Partitioning Techniques in System Design How to Prepare for Low-Level Design Interviews? Essential Security Measures in System Design Design Patterns Design Patterns Tutorial Creational Design Patterns Structural Design Patterns Behavioral Design Patterns Design Patterns Cheat Sheet - When to Use Which Design Pattern? Interview Guide for System Design How to Crack System Design Interview Round? System Design Interview Questions and Answers 5 Common System Design Concepts for Interview Preparation 5 Tips to Crack Low-Level System Design Interviews System Design Interview Questions & Answers Most Commonly Asked System Design Interview Problems/Questions Design Dropbox - A System Design Interview Question Designing Twitter - A System Design Interview Question System Design Netflix | A Complete Architecture System Design of Uber App | Uber System Architecture Design BookMyShow - A System Design Interview Question Designing Facebook Messenger | System Design Interview Complete Roadmap to Learn System Design for Beginners Guide to System Design for Freshers How Disney+ Hotstar Managed (5 Cr)+ Live Viewers During India's T20 World Cup Win[2024] DSA to System Design Course System Design Tutorial Last Updated : 03 Oct, 2025 Comments Improve Suggest changes 320 Likes Like Report System Design is the process of designing the architecture, components, and interfaces for a system so that it meets the end-user requirements. This specifically designed System Design tutorial will help you to learn and master System Design concepts in the most efficient way, from the basics to the advanced level. Why Learn System Design? System design is important for anyone who wants to build a robust, scalable, and efficient software application. Whether you are building a small-scale application or a large one, understanding system design allows you to architect solutions that can handle real-world complexities. Scalability and Reliability: System design ensures systems can grow and handle increased demand without failure. Efficient Resource Management: It helps in optimizing resource allocation, ensuring fast and responsive applications. Adaptability : System design enables the creation of systems that can evolve with changing business needs, reducing long-term costs. Architectural Understanding: Learning different system architectures (e.g., microservices, monolithic) helps in building applications suited to various needs. Interview Preparation: Mastering system design is key to excelling in system design interviews, commonly asked in tech company hiring processes. Basics System Design Introduction - HLD & LLD Functional and Non Functional Requirements High Level Design What is High Level Design? System Architectural Styles Monolithic Architecture Microservices Monolithic vs Microservices Architecture Event-Driven Architecture Serverless Architecture Stateful vs. Stateless Architecture Pub/Sub Architecture Scalability Horizontal and Vertical Scaling Which Scalability approach is right for our Application? Primary Bottlenecks that Hurt the Scalability of an Application Databases in Designing Systems Choosing a Database - SQL or NoSQL File and Database Storage Systems Database Replication in System Design Database Sharding Block, Object, and File Storage Normalization Process in DBMS SQL Query Optimization Denormalization in Databases Intro to Redis Consistency, Availability, Reliability & Maintainability Availability in System Design How to achieve High Availability? Consistency in System Design Consistency pattern CAP Theorem Reliability in System Design Fault Tolerance in System Design Maintainability Load Balancing Concurrency and Parallelism Load Balancer Load Balancing Algorithms Consistent Hashing Latency, Throughput and Caching Latency and Throughput Caching in System Design API Gateway, Message Queues & Rate Limiting What is API Gateway Message Queues Rate Limiting Rate Limiting Algorithm Protocols, CDN, Proxies & WebSockets Communication Protocols Domain Name System DNS Caching Time to Live(TTL) Content Delivery Network(CDN) Proxies in System Design Forward Proxy vs Reverse Proxy Websockets Testing Unit Testing Integration Testing CI/CD Pipeline Security Measures Security Measures in System Design Authentication and Authorization Secure Socket Layer (SSL) and Transport Layer Security (TLS) Secure Software Developement Life Cycle (SSDLC) Data Backup and Disaster Recovery Distributed System Design Consensus Algorithms in Distributed System Distributed Tracing Secure Communication in Distributed System Cost & Performance Optimizations Software Cost Estimation Performance Optimization Techniques Low Level Design(LLD) Core Concepts Object-Oriented Programing(OOP) Concepts Modularity and Interfaces What is Low Level Design or LLD Design Principles SOLID Principles DRY Principle KISS Principle YAGNI Principle UML Unified Modeling Language (UML) Design Patterns Design Patterns Singleton Pattern Factory Method Abstract Factory Builder Pattern Prototype Pattern Adapter Pattern Decorator Pattern Composite Pattern Proxy Pattern Facade Pattern Observer Pattern Strategy Pattern Command Pattern State Pattern Template Method Pattern Interview Questions & Answers of System Design URL Shortening Service Design Dropbox Design Twitter System Design Netflix – Complete Architecture System Design of Uber App – Uber System Architecture Design BookMyShow Designing Facebook Messenger Designing Whatsapp Messenger Designing Instagram Designing Airbnb System Designing of Airline Management System Common Design Interview Questions Tips for System Design interview How to Crack System Design Round in Interviews? 5 Tips to Crack Low-Level System Design Interviews 5 Common System Design Concepts for Interview Preparation 6 Steps To Approach Object-Oriented Design Questions in Interview System Design Life Cycle Visit Course System Design Life Cycle Introduction of SOLID Design Introduction to the Design Patterns Creational Design Patterns System Design Tutorial | A complete Overview Comment N nikhilaggarwal3 Follow 320 Improve N nikhilaggarwal3 Follow 320 Improve Article Tags : System Design Tutorials Like 744k+ interested Geeks DSA to Development: A Complete Guide Explore 39k+ interested Geeks GATE CSE Rank Booster with Expert-Curated Questions Explore 210k+ interested Geeks Competitive Programming - Self Paced Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/python-programming-language/", "title": "Python Tutorial - Learn Python Programming Language - GeeksforGeeks", "text": "Python Tutorial - Learn Python Programming Language - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Python Tutorial Data Types Interview Questions Examples Quizzes DSA Python Data Science NumPy Pandas Practice Django Flask Projects Sign In ▲ Open In App Share Your Experiences Python Fundamentals Python Introduction Input and Output in Python Python Variables Python Operators Python Keywords Python Data Types Conditional Statements in Python Loops in Python - For, While and Nested Loops Python Functions Recursion in Python Python Lambda Functions Python Data Structures Python String Python Lists Python Tuples Python Dictionary Python Sets Python Arrays List Comprehension in Python Advanced Python Python OOP Concepts Python Exception Handling File Handling in Python Python Database Tutorial Python MongoDB Tutorial Python MySQL Python Packages Python Modules Python DSA Libraries List of Python GUI Library and Packages Data Science with Python NumPy Tutorial - Python Library Pandas Tutorial Matplotlib Tutorial Python Seaborn Tutorial StatsModel Library- Tutorial Learning Model Building in Scikit-learn TensorFlow Tutorial PyTorch Tutorial Web Development with Python Flask Tutorial Django Tutorial | Learn Django Framework Django ORM - Inserting, Updating & Deleting Data Templating With Jinja2 in Flask Django Templates Python | Build a REST API using Flask How to Create a basic API using Django Rest Framework ? Python Practice Python Quiz Python Coding Practice Python Interview Questions and Answers DSA to Development Course Python Tutorial - Learn Python Programming Language Last Updated : 13 Oct, 2025 Comments Improve Suggest changes 686 Likes Like Report Python is one of the most popular programming languages. It’s simple to use, packed with features and supported by a wide range of libraries and frameworks. Its clean syntax makes it beginner-friendly. A high-level language, used in web development, data science, automation, AI and more. Known for its readability, which means code is easier to write, understand and maintain. Backed by library support, so we don’t have to build everything from scratch, there’s probably a library that already does what we need. Why to Learn Python? Requires fewer lines of code compared to other programming languages like Java. Provides Libraries / Frameworks like Django, Flask and many more for Web Development, and Pandas, Tensorflow, Scikit-learn and many more for, AI/ML, Data Science and Data Analysis Cross-platform, works on Windows, Mac and Linux without major changes. Used by top tech companies like Google, Netflix and NASA. Many Python coding job opportunities in Software Development, Data Science and AI/ML. Try our ongoing free course Python Skillup with weekly topic coverage, notes, daily quizzes and coding problems. Basics In this section, we’ll cover the basics of Python programming, including installing Python, writing first program, understanding comments and working with variables, keywords and operators. Before starting to learn python we need to install python on our system. Introduction Applications Input and Output Variables Operators Quiz: Basics , I/O Keywords Data Types Quiz: Data Types , Numbers , Boolean Conditional Statements Loops Quiz: Control Flow , Loops Functions In this section of Python 3 tutorial we'll explore Python function syntax, parameter handling, return values and variable scope. Along the way, we'll also introduce versatile functions like range(), map, filter and lambda functions. Functions Pass Statement in Function Global and Local Variables Recursion *args and **kwargs in Function ‘Self’ as Default Argument First Class Function Lambda Function Map , Reduce and Filter Function Inner Function Decorators Quiz: Functions Data Structures Python offers versatile collections of data types, including lists, string, tuples, sets, dictionaries and arrays. In this section, we will learn about each data types in detail. Strings List Quiz: List , String Tuples Dictionary Quiz: Tuples , Dictionary Sets Arrays List Comprehension Quiz: Sets , Arrays , List Comprehension Python's collections module offers essential data structures, including the following: Counters Heapq Deque OrderedDict Defaultdict Quiz: Counters , Heapq , Deque , OrderedDict To learn data structure and algorithm with python in detail, you can refer to our DSA with Python Tutorial. OOP Concepts In this section, we'll explore the core principles of object-oriented programming (OOP) in Python. From encapsulation to inheritance, polymorphism, abstract classes and iterators, we'll cover the essential concepts that helps you to build modular, reusable and scalable code. Python OOP Classes and Objects Polymorphism Inheritance Abstraction Encapsulation Iterators Quiz: OOP Exception Handling In this section, we'll explore Python Exception Handling that how Python deals with unexpected errors, enabling us to write fault-tolerant code. We'll cover file handling, including reading from and writing to files. Exception Handling Built-in Exception User defined Exception Quiz: Exception Handling File Handling In this section, we will cover file handling, including reading from and writing to files. File Handling Read Files Write/Create Files OS Module pathlib Module Directory Management Quiz: File Handling Database Handling In this section we will learn how to access and work with MySQL and MongoDB databases Python MongoDB Tutorial Python MySQL Tutorial Packages or Libraries Python is a huge collection of Python Packages standard libraries that make development easier. These libraries help with a wide range of tasks and can save you a lot of time by providing ready-to-use tools. Some commonly used types of libraries in Python include: Packages Built-in Modules DSA Libraries GUI Libraries Data Science 1. Foundational Libraries : These are the libraries that form the base for all data science work. Start here to build a strong foundation. NumPy Pandas Matplotlib 2. Advanced Visualization and Statistical Tools: Once you’re comfortable with basic data handling and visualization, move to creating cleaner visuals and performing statistical analysis. Seaborn Statsmodel 3. Machine Learning Libraries: After data manipulation and visualization, learn machine learning, starting with simpler models and moving to advanced ones. Scikit-learn XGBoost / LightGBM 4. Deep Learning Frameworks: If you’re interested in AI and deep learning, these libraries will allow you to build and train neural networks. TensorFlow and Keras PyTorch To learn more, you can refer to Python for Data Science . Web Development 1. Core Web Frameworks (Backend Development with Python): These are the tools for building Python-based web applications. Flask Django 2. Database Integration: Learn how to connect Python web frameworks to databases for storing and retrieving data. SQLite SQLAlchemy Django ORM 3. Front-End and Backend Integration: Learn how to connect Python backends with front-end technologies to create dynamic, full-stack web applications. Jinja2 (Flask) Django Templates 4. API Development: Learn to build APIs (Application Programming Interfaces) for connecting your backend with front-end apps or other services. Flask-RESTful Django REST Framework (DRF) To learn more, you can refer to Python for Web Development. Practice Python quiz page covers topics including variables, data types, input, output, lists, tuples, dictionaries and sets. The Python Coding Practice Problems page offers exercises on loops, functions, lists, strings, dictionaries, sets and advanced structures like heaps and deques. Quizzes Python Coding Problems This Python tutorial is updated based on latest Python 3.13.1 version. Python Introduction Visit Course Python Introduction How Python Programs are Executed Comments in Python Variables in Python List Introduction Set in Python Comment K kartik Follow 686 Improve K kartik Follow 686 Improve Article Tags : Python Python Programs python Tutorials Like 5k+ interested Geeks GATE CSE 2027 [Semester & Placement Preparation] Explore 69k+ interested Geeks Machine Learning - Live Explore 36k+ interested Geeks GATE CSE 2026 Online Course [Live Weekday Classes ] Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/machine-learning/", "title": "Machine Learning Tutorial - GeeksforGeeks", "text": "Machine Learning Tutorial - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Python for Machine Learning Machine Learning with R Machine Learning Algorithms EDA Math for Machine Learning Machine Learning Interview Questions ML Projects Deep Learning NLP Computer vision Data Science Artificial Intelligence Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences Machine Learning Basics Introduction to Machine Learning Types of Machine Learning What is Machine Learning Pipeline? Applications of Machine Learning Python for Machine Learning Machine Learning with Python Tutorial NumPy Tutorial - Python Library Pandas Tutorial Data Preprocessing in Python EDA - Exploratory Data Analysis in Python Feature Engineering What is Feature Engineering? Introduction to Dimensionality Reduction Feature Selection Techniques in Machine Learning Supervised Learning Supervised Machine Learning Linear Regression in Machine learning Logistic Regression in Machine Learning Decision Tree in Machine Learning Random Forest Algorithm in Machine Learning K-Nearest Neighbor(KNN) Algorithm Support Vector Machine (SVM) Algorithm Naive Bayes Classifiers Unsupervised Learning What is Unsupervised Learning K means Clustering – Introduction Hierarchical Clustering in Machine Learning DBSCAN Clustering in ML - Density based clustering Apriori Algorithm Frequent Pattern Growth Algorithm ECLAT Algorithm - ML Principal Component Analysis(PCA) Model Evaluation and Tuning Evaluation Metrics in Machine Learning Regularization in Machine Learning Cross Validation in Machine Learning Hyperparameter Tuning ML | Underfitting and Overfitting Bias and Variance in Machine Learning Advanced Techniques Reinforcement Learning Semi-Supervised Learning in ML Self-Supervised Learning (SSL) Ensemble Learning Machine Learning Practice Machine Learning Interview Questions and Answers 100+ Machine Learning Projects with Source Code [2025] ML & Data Science Course Machine Learning Tutorial Last Updated : 28 Aug, 2025 Comments Improve Suggest changes 257 Likes Like Report Machine learning is a branch of Artificial Intelligence that focuses on developing models and algorithms that let computers learn from data without being explicitly programmed for every task. In simple words, ML teaches the systems to think and understand like humans by learning from the data. Try our ongoing free course Data Science Skillup with weekly topic coverage, notes, daily quizzes and coding problems. Machine Learning is mainly divided into three core types: Supervised, Unsupervised and Reinforcement Learning along with two additional types, Semi-Supervised and Self-Supervised Learning. Supervised Learning : Trains models on labeled data to predict or classify new, unseen data. Unsupervised Learning : Finds patterns or groups in unlabeled data, like clustering or dimensionality reduction. Reinforcement Learning : Learns through trial and error to maximize rewards, ideal for decision-making tasks. Note: The following are not part of the original three core types of ML, but they have become increasingly important in real-world applications, especially in deep learning. Additional Types : Self-Supervised Learning : Self-supervised learning is often considered as a subset of unsupervised learning, but it has grown into its own field due to its success in training large-scale models. It generates its own labels from the data, without any manual labeling. Semi-Supervised Learning : This approach combines a small amount of labeled data with a large amount of unlabeled data. It’s useful when labeling data is expensive or time-consuming. Module 1: Machine Learning Pipeline This section covers preprocessing, exploratory data analysis and model evaluation to prepare data, uncover insights and build reliable models. 1. Data Preprocessing ML workflow Data Cleaning Data Preprocessing in Python Feature Scaling Feature Extraction Feature Engineering Feature Selection Techniques 2. Exploratory Data Analysis Exploratory Data Analysis Exploratory Data Analysis in Python Advance EDA Time Series Data Visualization 3. Model Evaluation Regularization in Machine Learning Confusion Matrix Precision, Recall and F1-Score AUC-ROC Curve Cross-validation Hyperparameter Tuning Module 2: Supervised Learning Supervised learning algorithms are generally categorized into two main types: Classification - where the goal is to predict discrete labels or categories Regression - where the aim is to predict continuous numerical values. Supervised Learning There are many algorithms used in supervised learning each suited to different types of problems. Some of the most commonly used supervised learning algorithms are: 1. Linear Regression This is one of the simplest ways to predict numbers using a straight line. It helps find the relationship between input and output. Introduction to Linear Regression Gradient Descent in Linear Regression Multiple Linear Regression 2. Logistic Regression Used when the output is a \"yes or no\" type answer. It helps in predicting categories like pass/fail or spam/not spam. Understanding Logistic Regression Cost function in Logistic Regression 3. Decision Trees A model that makes decisions by asking a series of simple questions, like a flowchart. Easy to understand and use. Decision Tree in Machine Learning Types of Decision tree algorithms Decision Tree - Regression (Implementation) Decision tree - Classification (Implementation) 4. Support Vector Machines (SVM) A bit more advanced—it tries to draw the best line (or boundary) to separate different categories of data. Understanding SVMs SVM Hyperparameter Tuning - GridSearchCV Non-Linear SVM 5. k-Nearest Neighbors (k-NN) This model looks at the closest data points (neighbors) to make predictions. Super simple and based on similarity. Introduction to KNN Decision Boundaries in K-Nearest Neighbors (KNN) 6. Naïve Bayes A quick and smart way to classify things based on probability. It works well for text and spam detection. Introduction to Naive Bayes Gaussian Naive Bayes Multinomial Naive Bayes Bernoulli Naive Bayes Complement Naive Bayes 7. Random Forest (Bagging Algorithm) A powerful model that builds lots of decision trees and combines them for better accuracy and stability. Introduction to Random forest Random Forest Classifier Random Forest Regression Hyperparameter Tuning in Random Forest Introduction to Ensemble Learning Ensemble learning combines multiple simple models to create a stronger, smarter model. There are mainly two types of ensemble learning: Bagging that combines multiple models trained independently. Boosting that builds models sequentially each correcting the errors of the previous one. Module 3: Unsupervised learning Unsupervised learning are again divided into three main categories based on their purpose: Clustering Association Rule Mining Dimensionality Reduction . Unsupervised learning 1. Clustering Clustering algorithms group data points into clusters based on their similarities or differences. Types of clustering algorithms are: Centroid-based Methods: K-Means clustering Elbow Method for optimal value of k in KMeans K-Means++ clustering K-Mode clustering Fuzzy C-Means (FCM) Clustering Distribution-based Methods : Gaussian mixture models Expectation-Maximization Algorithm Dirichlet process mixture models (DPMMs) Connectivity based methods: Hierarchical clustering Agglomerative Clustering Divisive clustering Affinity propagation Density Based methods: DBSCAN (Density-Based Spatial Clustering of Applications with Noise) OPTICS (Ordering Points To Identify the Clustering Structure) 2. Dimensionality Reduction Dimensionality reduction is used to simplify datasets by reducing the number of features while retaining the most important information. Principal Component Analysis (PCA) t-distributed Stochastic Neighbor Embedding (t-SNE) Non-negative Matrix Factorization (NMF) Independent Component Analysis (ICA) Isomap Locally Linear Embedding (LLE) 3. Association Rule Find patterns between items in large datasets typically in market basket analysis . Apriori algorithm Implementing apriori algorithm FP-Growth (Frequent Pattern-Growth) ECLAT (Equivalence Class Clustering and bottom-up Lattice Traversal) Module 4: Reinforcement Learning Reinforcement learning interacts with environment and learn from them based on rewards. Reinforcement Learning 1. Model-Based Methods These methods use a model of the environment to predict outcomes and help the agent plan actions by simulating potential results. Markov decision processes (MDPs) Bellman equation Value iteration algorithm Monte Carlo Tree Search 2. Model-Free Methods The agent learns directly from experience by interacting with the environment and adjusting its actions based on feedback. Q-Learning SARSA Monte Carlo Methods Reinforce Algorithm Actor-Critic Algorithm Asynchronous Advantage Actor-Critic (A3C) Module 5: Semi Supervised Learning It uses a mix of labeled and unlabeled data making it helpful when labeling data is costly or it is very limited. Semi Supervised Learning Semi Supervised Classification Self-Training in Semi-Supervised Learning Few-shot learning in Machine Learning Module 6: Forecasting Models Forecasting models analyze past data to predict future trends, commonly used for time series problems like sales, demand or stock prices. ARIMA (Auto-Regressive Integrated Moving Average) SARIMA (Seasonal ARIMA) Exponential Smoothing (Holt-Winters) Module 7: Deployment of ML Models The trained ML model must be integrated into an application or service to make its predictions accessible. Machine learning deployement Deploy ML Model using Streamlit Library Deploy ML web app on Heroku Create UIs for prototyping Machine Learning model with Gradio APIs allow other applications or systems to access the ML model's functionality and integrate them into larger workflows. Deploy Machine Learning Model using Flask Deploying ML Models as API using FastAPI MLOps ensure they are deployed, monitored and maintained efficiently in real-world production systems. MLOps Continuous Integration and Continuous Deployment (CI/CD) in MLOps End-to-End MLOps For project ideas refer to: 100+ Machine Learning Projects with Source Code [2025] for hands-on implementation on projects After machine learning and have hands on experience in it we can start with deep learning from here: Deep Learning Tutorial What is Machine Learning Visit Course What is Machine Learning Types of Machine Learning: Supervised, Unsupervised, Reinforcement Introduction to Linear Regression - Machine Learning Decision Tree in Machine Learning Naive Bayes Classifiers K-Nearest Neighbor(KNN) Algorithm in Machine Learning Comment K kartik Follow 257 Improve K kartik Follow 257 Improve Article Tags : Machine Learning AI-ML-DS Tutorials Machine Learning Like 212k+ interested Geeks Learn C with Data Structures - Self Paced Explore 2k+ interested Geeks GATE DA Rank Booster with Expert-Curated Questions Explore 2k+ interested Geeks GATE DA 2027 Online Course [Live Classes + Recorded] Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/ai-ml-ds/", "title": "AI, ML and Data Science Tutorial - GeeksforGeeks", "text": "AI, ML and Data Science Tutorial - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Python for Machine Learning Machine Learning with R Machine Learning Algorithms EDA Math for Machine Learning Machine Learning Interview Questions ML Projects Deep Learning NLP Computer vision Data Science Artificial Intelligence Sign In ▲ Open In App 40% Off on GfG Courses Share Your Experiences Machine Learning Basics Introduction to Machine Learning Types of Machine Learning What is Machine Learning Pipeline? Applications of Machine Learning Python for Machine Learning Machine Learning with Python Tutorial NumPy Tutorial - Python Library Pandas Tutorial Data Preprocessing in Python EDA - Exploratory Data Analysis in Python Feature Engineering What is Feature Engineering? Introduction to Dimensionality Reduction Feature Selection Techniques in Machine Learning Supervised Learning Supervised Machine Learning Linear Regression in Machine learning Logistic Regression in Machine Learning Decision Tree in Machine Learning Random Forest Algorithm in Machine Learning K-Nearest Neighbor(KNN) Algorithm Support Vector Machine (SVM) Algorithm Naive Bayes Classifiers Unsupervised Learning What is Unsupervised Learning K means Clustering – Introduction Hierarchical Clustering in Machine Learning DBSCAN Clustering in ML - Density based clustering Apriori Algorithm Frequent Pattern Growth Algorithm ECLAT Algorithm - ML Principal Component Analysis(PCA) Model Evaluation and Tuning Evaluation Metrics in Machine Learning Regularization in Machine Learning Cross Validation in Machine Learning Hyperparameter Tuning ML | Underfitting and Overfitting Bias and Variance in Machine Learning Advanced Techniques Reinforcement Learning Semi-Supervised Learning in ML Self-Supervised Learning (SSL) Ensemble Learning Machine Learning Practice Machine Learning Interview Questions and Answers 100+ Machine Learning Projects with Source Code [2025] ML & Data Science Course AI, ML and Data Science Tutorial Last Updated : 25 Aug, 2025 Comments Improve Suggest changes 134 Likes Like Report This article covers everything you need to learn about AI, ML and Data Science, starting with Python programming, statistics and probability. It also includes EDA, visualization, ML, deep learning, AI, projects and interview questions for career preparation. 1. Learning Python Python is one of the most popular programming languages today, known for its simplicity, extensive features and library support. Its clean syntax makes it beginner-friendly, while its libraries and frameworks makes it perfect for developers. Python Tutorial Python Quizzes Python Interview Questions 2. Math For Data Science Math for Data Science is all about the fundamental mathematical tools and concepts you need to work effectively with data. It includes Statistics & Probability, Linear Algebra and Calculus. Linear Algebra for Data Science Statistics for Data Science Probability for Data Science Calculus for Data Science Practice Linear Algebra , Statistics , Probability and Calculus 3. Exploratory Data Analysis Exploratory Data Analysis (EDA) is an approach to analyzing data sets to summarize their main characteristics, often using visual methods. It involves understanding data, cleaning data, visualizing data and further analysis. Exploratory Data Analysis or EDA EDA with NumPy, Pandas, Matplotlib and Seaborn 4. Data Analysis Data Analysis is the technique of collecting, transforming and organizing data to make future predictions and informed data-driven decisions. It also helps to find possible solutions for a business problem. There are six steps for Data Analysis which are: Ask or Specify Data Requirements, Prepare or Collect Data, Clean and Process, Analyze, Share, Act or Report. Data Analysis Data Analytics Projects Data Analysis Quiz Data Analytics Interview Questions 5. Data Visualization Data visualization is the process of turning data into visual representations like charts, graphs and maps. It helps us understand trends, patterns and outliers. Data Visualization Tutorial Data Visualization Projects Data Visualization Quiz Data Visualization Interview Questions 6. Machine Learning Machine learning is a subset of Artificial Intelligence (AI) that enables computers to learn from data and make predictions without being explicitly programmed. It can be categorized into three types: Supervised Learning, Unsupervised Learning and Reinforcement Learning. Machine Learning Tutorial Machine Learning Projects Machine Learning Quiz Machine Learning Interview Questions 7. Data Science with Python Data science enables organizations to make informed decisions, solve problems and understand human behavior. As the volume of data grows, so does the demand for skilled data scientists. The most common languages used for data science are Python and R, with Python being particularly popular. Data Science Tutorial Data Science Projects Data Science Quiz Data Science Interview Questions 8. Deep Learning Deep Learning is a branch of Artificial Intelligence (AI) that enables machines to learn from large amounts of data. It uses neural networks with many layers to automatically find patterns and make predictions. Deep Learning Tutorial Deep Learning Projects Deep Learning Quiz Deep Learning Interview Questions 9. Artificial Intelligence Artificial Intelligence (AI) refers to the simulation of human intelligence in machines that are programmed to think and act like humans. AI Tutorial AI Interview Questions AI Projects 10. Generative AI & LLM Generative AI (Gen AI) is a branch of artificial intelligence that can create new content instead of just analyzing data. It uses machine learning models (like large language models, GANs, and diffusion models) to generate text, images, audio, code, or even video. LLM (Large Language Model) is a type of artificial intelligence model designed to understand and generate human-like language. Generative AI Tutorial Generative AI Roadmap LLM Tutorial AI-ML-DS Interview Questions The AI-ML-DS Interview Series is an essential resource designed for individuals aspiring to start or switch careers in the fields of Artificial Intelligence (AI), Machine Learning (ML) and Data Science (DS). AI-ML-DS Interview Series Comment A anuragtriarna Follow 134 Improve A anuragtriarna Follow 134 Improve Article Tags : Machine Learning Like 532k+ interested Geeks Data Science Project Based Learning Explore 2k+ interested Geeks GATE DA 2027 Online Course [Live Classes + Recorded] Explore 1k+ interested Geeks GATE DA 2028 Online Course [Live Classes + Recorded] Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
{"url": "https://www.geeksforgeeks.org/web-development/", "title": "Web Development Technologies - GeeksforGeeks", "text": "Web Development Technologies - GeeksforGeeks Skip to content Courses DSA / Placements GATE 2026 Prep ML & Data Science Development Cloud / DevOps Programming Languages All Courses Tutorials Python Java DSA ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day Jobs Apply Now! Post Jobs Jobs Updates Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Web Tutorial Interview Questions Projects Prerequisites HTML CSS Javascript JSON TypeScript SQL React Node.js Express.js MongoDB Sign In ▲ Open In App Share Your Experiences HTML & CSS Tutorials HTML Tutorial CSS Tutorial Top 10 Projects For Beginners To Practice HTML and CSS Skills JS Tutorial JavaScript Tutorial JSON Tutorial TypeScript Tutorial Vue.js Tutorial jQuery Tutorial Frontend React Tutorial Next.js Tutorial Angular Tutorial Backend Node.js Tutorial Express.js Tutorial PHP Tutorial Django Tutorial | Learn Django Framework Database MongoDB Tutorial Redis Introduction SQL Tutorial MySQL Tutorial Full Stack Development Course Web Development Technologies Last Updated : 10 Sep, 2025 Comments Improve Suggest changes 131 Likes Like Report Web development refers to building, creating, and maintaining websites. It includes aspects such as web design, web publishing, web programming, and database management. It is the creation of an application that works over the internet, i.e., websites. Basics of Web Development To better understand the foundation of web development, it is recommended to take a look at the concepts used in web development. Why Learn Web Development? Web Development Prerequisites Important Terminologies Do you wish to learn Web Development in a scheduled manner ? Try our ongoing free course Web Development Skillup with weekly topic coverage, notes, quizzes and practical projects. There are two major areas: Frontend and Backend which forms the backbone of web development each plays a crucial role in creating seamless, functional web experiences. Frontend Development In this module, we explore the core technologies that run in the user’s browser—the client side—including how web pages are structured, styled, and made interactive, building everything users see and interact with. HTML (HyperText Markup Language): HTML is the language used to create the basic structure and content of web pages. It uses elements, tags, and attributes to organize text, images, and links. CSS (Cascading Style Sheets): CSS is used to style the HTML content. It controls colors, fonts, layouts, and how the page looks on different devicesMore importantly, CSS enables you to do this independent of the HTML that makes up each web page. JS (JavaScript): JavaScript adds life to web pages by making them interactive. It handles things like buttons, animations, and form checks. Backend Development: In this module, we will explore the technologies that work behind the scenes on the server to handle data, run the website, and store information . Server-Side Programming Languages In Backend Development, Server-side programming languages are used to write code that runs on the server, not in the user’s browser. This server-side scripting handles tasks like processing data, managing databases, and controlling how the website works behind the scenes Below are some popular languages used to build the back end of web applications: JavaScript/Node.js: JavaScript is a popular programming language mainly used to add interactivity on the client side (in browsers). With Node.js, JavaScript can also run on the server side. Node.js is an open-source environment that allows JavaScript to build fast, scalable back-end services like APIs. Many big companies like PayPal, Uber, and Netflix use Node.js for their server-side code. PHP: PHP is a server-side scripting language designed specifically for web development. Since PHP code executed on the server-side, so it is called a server-side scripting language. Python: Python is a programming language that lets you work quickly and integrate systems more efficiently. Ruby: An object-oriented programming language designed to be simple and natural to use. Ruby helps developers write clean and readable code. Java: Java is one of the most popular and widely used programming languages and platforms. It is highly scalable. Java components are easily available. Golang(Go): Golang is a procedural and statically typed programming language having the syntax similar to C programming language. Sometimes it is termed as Go Programming Language. C#: A modern, object-oriented language often used to build web applications on Microsoft platforms. Databases A database is where a website’s data like user's data, product's data are stored and organized. It is part of the backend (server side) that manages and keeps this information safe. Websites use databases to save and access information like user details, content, and transactions. Some databases organize data in tables (called relational databases, like MySQL), while others store data in flexible formats (called NoSQL databases, like MongoDB). There are basically two types of databases: 1. SQL/Relational Database A relational database stores data in tables, similar to a spreadsheet, where each table has rows and columns. The rows hold individual records, and the columns define the data attributes. Tables can be linked to each other through special keys, allowing related data to be connected. MySQL : MySQL is an open-source relational database management system that uses SQL for managing structured data. It’s known for its reliability, ease of use, and performance, widely used in web applications. Postgre SQL : PostgreSQL is a powerful, open-source relational database that supports advanced SQL features and complex queries. It handles structured data, ensures ACID compliance, and is known for its reliability and extensibility. 2. NoSQL Databases A NoSQL database stores data in a flexible, non-tabular format, unlike traditional relational databases. Instead of using tables with rows and columns, NoSQL databases might use documents, key-value pairs, wide-columns, or graphs to store data. This allows them to handle large amounts of unstructured or semi-structured data efficiently. They are designed to scale easily and manage big data applications. Mongodb : MongoDB is a NoSQL database storing data in JSON-like documents. It handles unstructured data, supports powerful queries, and scales easily across servers, making it popular for flexible, scalable applications. Cassandra : Apache Cassandra is an open-source NoSQL database that is used for handling big data. It has the capability to handle structure, semi-structured, and unstructured data. Redis : Redis is an in-memory NoSQL database known for its speed. It supports various data structures like strings, hashes, and lists, making it ideal for caching, real-time analytics, and messaging. Note: We use Database management systems help keep the data safe, organized, and easy to use. APIs and Data Exchange Formats During Website development, different software components and web applications constantly need to communicate and share information. For instance, the frontend of your web application (running in the user's browser) needs to get data from the backend (running on a server), or your application might need to fetch information from a third-party service like a weather provider or a payment gateway. This communication is made possible through Application Programming Interfaces (APIs) and standardized Data Formats. Data Exchange formate for API Communication: When applications communicate via APIs, they need a common, structured way to represent the data being exchanged. This is where data formats come in. Below are two common data formats used extensively in web development for API communication: JSON: JSON or JavaScript Object Notation is a format for structuring data. XML: Extensible Markup Language (XML) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. Version Control and Deployment Developing a web application involves more than just writing code. Two critical processes that ensure a smooth, organized, and reliable development workflow are Version Control and Deployment . Version control helps manage the evolution of your codebase, especially when working in teams, while deployment is the process of making your web application accessible to the world. Modern development practices tightly integrate these two concepts, often through automation. Graphics Graphical elements are one of the key feature of any webpage. They can be used to convey important points better than text does and beautify the webpage. Canvas: The HTML “canvas” element is used to draw graphics via JavaScript. SVG: SVG stands for Scalable Vector Graphics. It basically defines vector-based graphics in XML format. Some Important Links on Web Technology How can I start to learn Web Development? 10 Best Web Development Project Ideas For Beginners [2025] History And Evolution of Web Development Web 1.0, Web 2.0 and Web 3.0 with their difference Top Trends in Web Development Top 9 Technologies Transforming the Future of Web Development Comment K kartik Follow 131 Improve K kartik Follow 131 Improve Article Tags : Web Tech Like 69k+ interested Geeks Machine Learning - Live Explore 17k+ interested Geeks CBSE Class 12 Computer Science Explore 532k+ interested Geeks Data Science Project Based Learning Explore Corporate & Communications Address: A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) Registered Address: K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305 Company About Us Legal Privacy Policy Careers Contact Us Corporate Solution Campus Training Program Explore POTD Job-A-Thon Connect Blogs Nation Skill Up Tutorials Programming Languages DSA Web Technology AI, ML & Data Science DevOps CS Core Subjects GATE School Subjects Software and Tools Courses IBM Certification DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud GATE Trending Technologies Offline Centers Noida Bengaluru Pune Hyderabad Patna Preparation Corner Interview Corner Aptitude Puzzles GfG 160 System Design @GeeksforGeeks, Sanchhaya Education Private Limited , All rights reserved Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences"}
